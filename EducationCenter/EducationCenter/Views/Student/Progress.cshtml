@model EducationCenter.Models.StudentProgressViewModel
@{
    ViewData["Title"] = "Track Progress";
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h1 class="h2 fw-bold mb-1">@Model.CourseTitle</h1>
                            <p class="text-muted mb-0">Track and update your learning progress</p>
                        </div>
                        <div>
                            <a href="@Url.Action("CourseStudy", "Student", new { enrollmentId = Model.EnrollmentId })" class="btn btn-outline-primary">
                                <i class="bi bi-arrow-left me-1"></i> Back to Course
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Progress Update Section -->
    <div class="row mb-4">
        <div class="col-md-8 mx-auto">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white py-3">
                    <h2 class="h4 fw-bold mb-0">Update Your Progress</h2>
                </div>
                <div class="card-body p-4">
                    <form asp-action="UpdateProgress" asp-controller="Student" method="post">
                        <input type="hidden" name="enrollmentId" value="@Model.EnrollmentId" />
                        
                        <div class="mb-5">
                            <label class="form-label d-flex justify-content-between">
                                <span>Overall course progress:</span>
                                <span id="progressValue">@Model.CurrentProgress%</span>
                            </label>
                            <input type="range" class="form-range" min="0" max="100" 
                                   value="@Model.CurrentProgress" name="progress" id="progressRange">
                            <div class="d-flex justify-content-between text-muted small">
                                <span>0% (Not Started)</span>
                                <span>50% (In Progress)</span>
                                <span>100% (Completed)</span>
                            </div>
                        </div>
                        
                        <div class="text-center">
                            <button type="submit" class="btn btn-success btn-lg">
                                <i class="bi bi-check-circle me-1"></i> Save Progress
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Materials Progress Section -->
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white py-3">
                    <h2 class="h4 fw-bold mb-0">Materials Progress</h2>
                </div>
                <div class="card-body">
                    @if (Model.MaterialProgresses?.Any() == true)
                    {
                        <div class="table-responsive">
                            <table class="table">
                                <thead class="table-light">
                                    <tr>
                                        <th>Material</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var material in Model.MaterialProgresses)
                                    {
                                        <tr>
                                            <td>@material.MaterialTitle</td>
                                            <td>
                                                @if (material.IsCompleted)
                                                {
                                                    <span class="badge bg-success">Completed</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-warning">In Progress</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="form-check">
                                                    <input class="form-check-input material-checkbox" type="checkbox" 
                                                           value="@material.MaterialId" id="material-@material.MaterialId" 
                                                           @(material.IsCompleted ? "checked" : "")>
                                                    <label class="form-check-label" for="material-@material.MaterialId">
                                                        Mark as completed
                                                    </label>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="bi bi-journal-x text-muted fs-1"></i>
                            <p class="mt-3 mb-0">No materials have been added to this course yet.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Update progress value display when slider changes
            const progressRange = document.getElementById('progressRange');
            const progressValue = document.getElementById('progressValue');
            
            if (progressRange && progressValue) {
                progressRange.addEventListener('input', function() {
                    progressValue.textContent = this.value + '%';
                });
            }
            
            // Handle material checkboxes
            const materialCheckboxes = document.querySelectorAll('.material-checkbox');
            materialCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    console.log('Material', this.value, 'completion status:', this.checked);
                    
                    // Calculate new overall progress based on completed materials
                    const totalMaterials = materialCheckboxes.length;
                    const completedMaterials = document.querySelectorAll('.material-checkbox:checked').length;
                    const newProgress = Math.round((completedMaterials / totalMaterials) * 100);
                    
                    progressRange.value = newProgress;
                    progressValue.textContent = newProgress + '%';
                });
            });
        });
    </script>
}