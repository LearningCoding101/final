@model BLL.DTO.News.NewsDto
@{
    ViewData["Title"] = Model.Title;
    string badgeClass = Model.Type == "News" ? "bg-primary" :
                        Model.Type == "Event" ? "bg-success" :
                        Model.Type == "Project" ? "bg-warning" : "bg-info";
    string typeName = Model.Type;
}

<div class="container-fluid py-4">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <div>
                            <a href="@Url.Action("Index", "News")" class="text-decoration-none">
                                <i class="bi bi-arrow-left me-2"></i>Back to All News
                            </a>
                        </div>
                        <div>
                            @if (User.IsInRole("Admin"))
                            {
                                    <div class="btn-group" role="group">
                                        <a href="@Url.Action("Edit", "News", new { id = Model.Id })" class="btn btn-outline-primary">
                                            <i class="bi bi-pencil me-1"></i> Edit
                                        </a>
                                        <button type="button" class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">
                                            <i class="bi bi-trash me-1"></i> Delete
                                        </button>
                                    </div>
                            }
                        </div>
                    </div>
                    
                    <span class="badge @badgeClass mb-2">@typeName</span>
                    <h1 class="h2 fw-bold mb-3">@Model.Title</h1>
                    
                    <div class="d-flex flex-wrap align-items-center mb-3 text-muted small">
                        <div class="me-4">
                            <i class="bi bi-calendar me-1"></i>
                            <span>Published: @Model.PublishDate.ToString("MMMM dd, yyyy")</span>
                        </div>
                        
                        @if (Model.Type == "Event" && Model.EventDate.HasValue)
                        {
                                <div class="me-4">
                                    <i class="bi bi-calendar-event me-1"></i>
                                    <span>Event Date: @Model.EventDate.Value.ToString("MMMM dd, yyyy")</span>
                                </div>
                        }
                        
                        @if (Model.Type == "Event" && !string.IsNullOrEmpty(Model.EventLocation))
                        {
                                <div>
                                    <i class="bi bi-geo-alt me-1"></i>
                                    <span>Location: @Model.EventLocation</span>
                                </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Content -->
    <div class="row mb-4">
        <div class="col-lg-8">
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4">
                    @if (!string.IsNullOrEmpty(Model.ThumbnailUrl))
                    {
                            <div class="text-center mb-4">
                                <img src="@Model.ThumbnailUrl" class="img-fluid rounded" alt="@Model.Title" style="max-height: 400px;">
                            </div>
                    }
                    
                    <div class="content">
                        @Html.Raw(Model.Content.Replace(Environment.NewLine, "<br>"))
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-lg-4">
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h5 class="fw-bold mb-0">Share</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-around">
                        <a href="#" class="btn btn-outline-primary">
                            <i class="bi bi-facebook"></i>
                        </a>
                        <a href="#" class="btn btn-outline-info">
                            <i class="bi bi-twitter"></i>
                        </a>
                        <a href="#" class="btn btn-outline-success">
                            <i class="bi bi-envelope"></i>
                        </a>
                        <a href="#" class="btn btn-outline-secondary" onclick="copyLinkToClipboard()">
                            <i class="bi bi-link-45deg"></i>
                        </a>
                    </div>
                </div>
            </div>
            
            @if (Model.Type == "Event")
            {
                    <div class="card border-0 shadow-sm">
                        <div class="card-header bg-light">
                            <h5 class="fw-bold mb-0">Event Details</h5>
                        </div>
                        <div class="card-body">
                            <ul class="list-group list-group-flush">
                                @if (Model.EventDate.HasValue)
                                {
                                        <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0">
                                            <span><i class="bi bi-calendar-event me-2"></i> Date</span>
                                            <span class="fw-bold">@Model.EventDate.Value.ToString("MMMM dd, yyyy")</span>
                                        </li>
                                }
                            
                                @if (Model.EventDate.HasValue)
                                {
                                        <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0">
                                            <span><i class="bi bi-clock me-2"></i> Time</span>
                                            <span class="fw-bold">@Model.EventDate.Value.ToString("h:mm tt")</span>
                                        </li>
                                }
                            
                                @if (!string.IsNullOrEmpty(Model.EventLocation))
                                {
                                        <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0">
                                            <span><i class="bi bi-geo-alt me-2"></i> Location</span>
                                            <span class="fw-bold">@Model.EventLocation</span>
                                        </li>
                                }
                            </ul>
                        </div>
                    </div>
            }
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
@if (User.IsInRole("Admin"))
{
        <div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Confirm Deletion</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete "<strong>@Model.Title</strong>"? This action cannot be undone.</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <form asp-action="Delete" asp-controller="News" method="post">
                            <input type="hidden" name="id" value="@Model.Id" />
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
}

@section Scripts {
        <script>
            function copyLinkToClipboard() {
                navigator.clipboard.writeText(window.location.href)
                    .then(() => {
                        alert('Link copied to clipboard!');
                    })
                    .catch(err => {
                        console.error('Failed to copy link: ', err);
                    });
            }
        </script>
}